
from posix.types cimport time_t, clockid_t
# from posix.time cimport clock_gettime, timespec, CLOCK_MONOTONIC

cdef extern from "<sys/time.h>":
    enum: CLOCK_MONOTONIC

    cdef struct timespec:
        time_t tv_sec
        long   tv_nsec

    int clock_gettime(clockid_t, timespec *)

def busy_wait(int millis):
    cdef timespec ts_start
    cdef double start_ms
    clock_gettime(CLOCK_MONOTONIC, &ts_start)
    start_ms = (ts_start.tv_sec * 1000) + (ts_start.tv_nsec / 1000000)

    cdef double elapsed_time
    elapsed_time = 0

    cdef timespec ts
    cdef double current_ms
    while elapsed_time < millis:
        clock_gettime(CLOCK_MONOTONIC, &ts)
        current_ms = (ts.tv_sec * 1000) + (ts.tv_nsec / 1000000)
        elapsed_time = current_ms - start_ms